// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  refreshToken String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model User {
  id        String      @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      Role
  teacherId String? @unique
  studentId String? @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Session   Session[]

  Teacher   Teacher?
  Student   Student?
}

model Teacher {
  id          String   @id @default(cuid())
  userId      String   @unique
  department  String
  courses     Course[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  user        User  @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Student {
  id          String      @id @default(cuid())
  userId      String   @unique
  GPA         Float
  major       String
  degree      String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now())

  Enrollment  Enrollment[]

  user        User     @relation(fields: [userId], references: [id])

  @@index([userId])

}
model Course {
  id         String     @id @default(cuid())
  name       String
  code       String     @unique
  teacher    Teacher   @relation(fields: [teacherId], references: [id])
  teacherId  String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @default(now())

  Enrollment Enrollment[]

  @@index([teacherId])
}

model Enrollment {
  id        String   @id @default(cuid())
  student   Student  @relation(fields: [studentId], references: [id])
  studentId String
  course    Course   @relation(fields: [courseId], references: [id])
  courseId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([studentId, courseId])
  @@index([studentId])
  @@index([courseId])
}

enum Role {
  GUEST
  STUDENT
  TEACHER
}